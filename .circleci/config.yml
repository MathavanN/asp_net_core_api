workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test
version: 2
jobs:
  build:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.2
    steps:
      - checkout
      - run:
          name: Restore
          command: dotnet restore ./Supermarket.Core/Supermarket.Core.csproj
      - run:
          name: Restore
          command: dotnet restore ./Supermarket/Supermarket.csproj
      - run:
          name: Build
          command: dotnet build ./Supermarket.Core/Supermarket.Core.csproj
      - run:
          name: Build
          command: dotnet build ./Supermarket/Supermarket.csproj
  test:
    docker:
      - image: mcr.microsoft.com/dotnet/core/sdk:2.2
    steps:
      - checkout
      - run:
          name: Restore
          command: dotnet restore ./Supermarket.UnitTests/Supermarket.UnitTests.csproj
      - run:
          name: Build
          command: dotnet build ./Supermarket.UnitTests/Supermarket.UnitTests.csproj
      - run:
          name: Test
          command: dotnet test --logger "trx;LogFileName=TestResults.trx" --logger "xunit;LogFileName=TestResults.xml" --results-directory ./CoverageReports/UnitTests /p:CollectCoverage=true /p:CoverletOutput=CoverageReports\Coverage\ /p:CoverletOutputFormat=cobertura /p:Exclude="[xunit.*]*"
      - run:
          name: GenerateReport
          command: dotnet reportgenerator ./Supermarket.UnitTests/Supermarket.UnitTests.csproj "-reports:CoverageReports\Coverage\coverage.cobertura.xml" "-targetdir:CoverageReports\Coverage" -reporttypes:HTML;HTMLSummary
      - run:
          name: SendToCodecov
          command: codecov -f ".\Supermarket.UnitTests\CoverageReports\Coverage\coverage.cobertura.xml"  -t $CODECOV_TOKEN
